<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or	-->
<!-- modify it under the terms of the GNU General Public License as	-->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.			-->
<!--									-->
<!-- This program is distributed in the hope that it will be useful,	-->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of	-->
<!-- MERCHANTARouteTNESS FOR A PARTICULAR PURPOSE. See the		-->
<!-- GNU General Public License for more details.			-->
<!--									-->
<!-- You should have received a copy of the GNU General Public License	-->
<!-- along with this program; if not, write to the			-->
<!-- Free Software Foundation, Inc.,					-->
<!-- 59 Temple Place, Suite 330, Boston, MA	02111-1307 USA		-->
<!--									-->
<!--	Sipp default 'uas' scenario.					-->
<!--									-->

<scenario name="Basic UAS responder">

	<nop hide="true">
		<action>
			<assignstr
				assign_to="rr_out"
				value="\x3Csip:[local_ip]:[local_port];transport=[transport];lr\x3E" />
		</action>
	</nop>


<!-- By adding rrs="true" (Record Route Sets), the route sets		-->
<!-- are saved and used for following messages sent. Useful to test	-->
<!-- against stateful SIP proxies/B2BUAs.				-->
	<recv request="INVITE">

		<action>
			<ereg 
				regexp=".*"
				header="Via:"
				search_in="hdr"
				check_it="true"
				assign_to="original_via"/>
		</action>

	</recv>

	<!-- The '[last_*]' keyword is replaced automatically by the		-->
	<!-- specified header if it was present in the last message received	-->
	<!-- (except if it was a retransmission). If the header was not		-->
	<!-- present or if no message has been received, the '[last_*]'		-->
	<!-- keyword is discarded, and all bytes until the end of the line	-->
	<!-- are also discarded.						-->
	<!--									-->
	<!-- If the specified header was present several times in the		-->
	<!-- message, all occurences are concatenated (CRLF seperated)		-->
	<!-- to be used in place of the '[last_*]' keyword.			-->

	<send>
		<![CDATA[

			SIP/2.0 100 Trying
			[last_Via:]
			Record-Route: [$rr_out]
			[last_From:]
			[last_To:]
			[last_Call-ID:]
			[last_CSeq:]
			Contact: <sip:[local_ip]:[local_port];transport=[transport]>
			X-SIPP: uas.xml
			Content-Length: 0

		]]>
	</send>

	<send>
		<![CDATA[

			SIP/2.0 180 Ringing
			[last_Via:]
			Record-Route: [$rr_out]
			[last_From:]
			[last_To:];tag=[call_number]
			[last_Call-ID:]
			[last_CSeq:]
			Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, OPTIONS, UPDATE, PRACK, SUBSCRIBE, INFO
			Contact: <sip:[local_ip]:[local_port];transport=[transport]>
			X-SIPP: uas.xml
			Content-Length: 0

		]]>
	</send>

	<recv request="UPDATE" rtd="true">
		<action>
			<ereg
				regexp="\s*(.*)\s*"
				search_in="hdr"
				header="Route:"
				assign_to="1,r_got"/>
			<strcmp
				assign_to="1"
				variable="r_got"
				variable2="rr_out" />
			<test
				assign_to="r_wrong"
				variable="1"
				compare="not_equal"
				value="" />
		</action>
	</recv>

	<nop condexec="r_wrong">
		<action>
			<error message="UPDATE Route expected '[$rr_out]' but got '[$r_got]'" />
		</action>
	</nop>

	<send>
		<![CDATA[

			SIP/2.0 200 OK
			[last_Via:]
			[last_From:]
			[last_To:]
			[last_Call-ID:]
			[last_CSeq:]
			Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, OPTIONS, UPDATE, PRACK, SUBSCRIBE, INFO
			Contact: <sip:bob@[local_ip]:[local_port]>
			X-SIPP: uas.xml ACK UPDATE
			Content-Length:0

		]]>
	</send>

	<pause milliseconds="200" />

	<send retrans="500">
		<![CDATA[

			SIP/2.0 200 OK
			Via: [$original_via]
			Record-Route: <sip:[local_ip]:[local_port];transport=[transport];lr>
			[last_From:]
			[last_To:]
			[last_Call-ID:]
			CSeq: [cseq-1] INVITE
			Allow: INVITE, ACK, CANCEL, BYE, NOTIFY, REFER, OPTIONS, UPDATE, PRACK, SUBSCRIBE, INFO
			Contact: <sip:[local_ip]:[local_port];transport=[transport]>
			X-SIPP: uas.xml ANSWER CALL
			Content-Type: application/sdp
			Content-Length: [len]

			v=0
			o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
			s=-
			c=IN IP[media_ip_type] [media_ip]
			t=0 0
			m=audio [media_port] RTP/AVP 0
			a=rtpmap:0 PCMU/8000

		]]>
	</send>

	<recv request="ACK">
		<action>
			<!-- Save the From tag. We'll need it when we send our BYE -->
			<ereg
				regexp="(;tag=.*)"
				header="From:"
				search_in="hdr"
				check_it="true"
				assign_to="remote_tag"/>
			<!-- Save the From user portion of URI. We'll need it when we send our BYE -->
			<ereg
				regexp="(sip:bob)"
				header="From:"
				search_in="hdr"
				check_it="true"
				assign_to="remote_user"/>
			</action>
	</recv>


	<send retrans="500">
		<![CDATA[

			BYE [$remote_user]@[remote_ip]:[remote_port] SIP/2.0
			Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
			From: <sip:charlie@[local_ip]:[local_port]>;tag=[call_number]
			To: <[$remote_user]@[remote_ip]:[remote_port]>[$remote_tag]
			Call-ID: [call_id]
			CSeq: [cseq] BYE
			Contact: sip:charlie@[local_ip]:[local_port]
			Max-Forwards: 70
			Subject: Performance Test
			Content-Length: 0

		]]>
	</send>

	<recv
		request="ACK"
		optional="true"
		rtd="true">
	</recv>

	<recv response="200">
	</recv>

	<!-- definition of the response time repartition table (unit is ms)	-->
	<ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

	<!-- definition of the call length repartition table (unit is ms)	-->
	<CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

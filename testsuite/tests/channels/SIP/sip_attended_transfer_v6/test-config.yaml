testinfo:
    skip: 'See ASTERISK-20616'
    summary:     'Test SIP Attended Transfer over IPv6'
    description: |
        "This test verifies the SIP REFER with Replaces attended transfer routine over IPv6. Two calls are originated and terminated at pairs SIPp scenarios.  After the calls are brought up, the two originating SIPp instances communicate using SIPp's 3PCC Extended Mode to pass the Call-ID of the originating leg of the second call to the originating leg of the primary call. The originating leg of the primary call uses this Call-ID in a REFER to bridge the two terminating legs.  This bridged call is then hung up to terminate the test."

properties:
    dependencies:
        - python : 'twisted'
        - python : 'starpy'
        - custom : 'ipv6'
        - app : 'sipp'
        - asterisk : 'chan_sip'
    tags:
        - SIP
        - transfer

test-modules:
    add-test-to-search-path: 'True'
    test-object:
        config-section: sipp-config
        typename: 'sipp.SIPpTestCase'
    modules:
        -
            config-section: ami-config
            typename: 'ami.AMIEventModule'

sipp-config:
        test-iterations:
                -
                        scenarios:
                                - { 'target': '[::1]', 'key-args': {'scenario': 'uas-no-hangup.xml', '-i': '[::1]', '-p': '5066'} }
                                - { 'target': '[::1]', 'key-args': {'scenario': 'uas-no-hangup.xml', '-i': '[::1]', '-p': '5067'} }
                                - { 'target': '[::1]', 'key-args': {'scenario': 'uac-call.xml', '-i': '[::1]', '-p': '5068', '-slave': 's1', '-slave_cfg': 'slave_cfg.conf'} }
                                - { 'target': '[::1]', 'key-args': {'scenario': 'uac-calls-and-refer.xml', '-i': '[::1]', '-p': '5065', '-master': 'm', '-slave_cfg': 'slave_cfg.conf'} }

ami-config:
    -
        type: 'callback'
        conditions:
            match:
                Event: 'Bridge'
                Bridgestate: 'Unlink'
                Bridgetype: 'core'
                Channel1: '[sS][iI][pP]/end_a-.*'
                Channel2: '[sS][iI][pP]/end_d-.*ZOMBIE>'
        callbackModule: 'hangup_call'
        callbackMethod: 'hangup_call'
        count: '1'
